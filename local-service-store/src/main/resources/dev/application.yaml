server:
  port: 8090
spring:
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/eat?stringtype=unspecified
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    userName: guest
    password: guest
    virtualhost: /
  main:
    allow-bean-definition-overriding: true
  application:
    name: local-service-store
mybatis-plus:
  mapper-locations: classpath*:com/yuqijun/localservice/store/mapper/*Mapper.xml

  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #机器 ID 部分(影响雪花ID)
    workerId: 1
    #数据标识 ID 部分(影响雪花ID)(workerId 和 datacenterId 一起配置才能重新初始化 Sequence)
    datacenterId: 18
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    #自定义SQL注入器
    #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
app:
  id: ${spring.application.name}
apollo:
  meta: http://127.0.0.1:8080
  bootstrap:
    namespaces: application
    enabled: false
    eagerLoad.enabled: false
eureka:
  client:
    enabled: false
  cors:
    enabled: treu
  internal-agent:
    enabled: false
logging:
  level:
    root: info # 根日志，默认级别是info，如果使用info，可以不写这一行
    com.moyundong.dao: debug # 子级别日志，可以指定到自己的某个包
  file: /Users/yuqijun/yuqijun/local-service-log/log # 定义日志文件的路径，可以是相对路径也可以是绝对路径
